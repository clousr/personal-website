SECTION 2.20

rails new "file name" -T --database=postgresql
-T (rails does not install test framework)
***To do: Integrating postman testing framework

rails s
(starts rails server)

rails db:create
(creates database?)

rails db:migrate
(unknown??)

Generators and the Scaffold gereator
rails g scaffold Blog title:string body:text
(g(generator) scaffold(rails generator) Blog(feature) string=156 charachters text=inf)

within sublime the db migrate folder has a file with the scaffolded items

rails db:migrate
(unsure as to why I migrated again)

within sublime there will be db/schema, do not touch unless dire circumstances, check this file into version control

routes file under config?
---resources Blogs (gives us our route)


section 2.21
app/assets/config
--- 

app/assests/javascript/blogs.coffee
----superscript of javascript

app/assests/Stylesheets
-css & scss files
-scaffolds file - using this instead of regular HTML

channels
--putting live data into the program/action cable

controllers
--communicate between model, view, and routing systems
--runs def index action when visiting localhost:3000/blogs
---   .limit(#) will limit the number shown

--def show
--- 

before _action :setblog,only [:def1, :def1]
--- will call the set blog method when calling :def1 and :def2

@blog????


blogs_controller

--def_new
---blog.new
---creates the form

--def create
--- creates a new blog
---blog.new(blog_params)
--- sends paramaeters to 
---json files are not usful right now
----used in api development
--- blog_path(@blog)<---- same as @blog


Views/blog
-- carries a lot of the same files as blogs_controller
--in html.erb


section 2.23
rake routes
--

resources
-populates all of the popular routes
-restful routing

What is a URI Pattern
-- :id 

section 2.24
convention over ????

enviroments

section 2.26-27
rails h (help menu)
rails -m (to use a template, good for config files and authorization)

gem divise(for authentication)

--skip_keeps ()
git hub automatically deletes empty folders .keep file will prevent this

puma is a new webserver
rails sproket, spring, listen, turbolinks, angular?

unit testing, tdd,

API mode

case variable[:variable]
when variable   then variable


What is an instance method?
instanciates inderatcts with model

section 3.31
git init
git add (optional --all if first run, can also commit individual files)
git commit -m 'initial commit'
git push

section 3.32
.gitignore files
--hides secrets file and other things you do not want public
-- add line to .gitignore /config/secrets.yml

git checkout config/secrets.yml
-- will return your code back to last commit

git rm . -r --cache 
-MOST IMPORTANT LINE OF CODE IN YOUR REPITIORE
-removes ths cache
-allows for you to change the git status when you change gitignore, will allow the appropriate changes

section 3.33
readme.md
.md means markdown
learn markdown tutorial
daring fireball
leanpub

H1 tag - # (will create a large bold title)
Block Quote - > (will create 'indentation' into page)
H3 tags - ###( will create a smaller bold title)
bullet points - -
code snipets- ```codetype(eg ruby/javascript) return "code" return```

section 4.38-39 rails controller and building pages
git branch
git checkout - b branchname ## replace branchname
rails g controller pages ## created pages_controller.rb , pages.coffee, pages.scss, pages_helper.rb, routes.rb #(under config near locales, puma, secrets etc ), veiw files##

MVC## Model - Veiw - Controller

routes.rb and specified controllers # names are connected to the pages_controller file and veiws files

"raise" will throw an error
put instance variable @posts = Blog.all # class variable @posts = Blog.all method or variable
## Blog.all is the model

##pushing to a git branch
git push origin branchname

compare and pull request on github to checks to see if able to merge with master branch and pull down master


section 4.40 Model Generator
rails g model Skill title:string percent_utilized:integer 
creates migration under db/migrate and  model.rb file under models/concerns

rails db:migrate  #changes schema and creates empty tables

rails c #rails console

Skill.create!(title: "Rails", percent_utilized: 75)

Skill.all # will do a databse call

#checkout master after commit but before push
git merge model-generator # do not do this if you are working with a team use the website tool

rails g resource Portfolio title:string subtitle:string body:text main_image:text
#images are strored as text bc it is stored as link to the image, string is only limited to 156 chars
#added thumb_image at a later date  by altering the schema file??- that solved the seeds problem, but it caused errors. changed the specific migration file
##ssecond attempt was to add adding -force to overwrite

# invoke  active_record
      create    db/migrate/20171004203017_create_portfolios.rb
      create    app/models/portfolio.rb
      invoke  controller
      create    app/controllers/portfolios_controller.rb
      invoke    erb
      create      app/views/portfolios
      invoke    helper
      create      app/helpers/portfolios_helper.rb
      invoke    assets
      invoke      coffee
      create        app/assets/javascripts/portfolios.coffee
      invoke      scss
      create        app/assets/stylesheets/portfolios.scss
      invoke  resource_route
       route    resources :portfolios
#
#portfolios_controller and views/portfolios are empty
#resources scaffold is a scaled down scaffold generator


4.42-44  Rails generators deep dive
rails new GeneratorApp -T --database=postgresql
change into dir
rails db:create #still unsure what this does, but creates db files
rails g scaffold Post title:string body:text
rails db:migrate #still unsure what this does
creates scaffolds stylesheets which suck (app/assets/stylesheets)
config/application.rb # hash out config.load_defaults 5.1, add your defaults here:
#common are from http://guides.rubyonrails.org/generators.html
config.generators do |g|
      g.orm             :active_record#standard database
      g.template_engine :erb#could use slim or haml(yml?)
      g.test_framework  :test_unit, fixture: false#changed to false #testunit could be changed to rspec/maybe postman idk
      g.stylesheets     false#added to match, do not create stylesheets
      g.javascripts     false#added to match, do not create
end
#different in GeneratorApp to match guide

rails g scaffold Blog title:string
rails db:migrate

#To also customize what gets generated
## create /lib/templates/erb/scaffold/index.html.erb #would be called something else if we are not using erb

#this is where you can pull the software from the rails documentation
https://github.com/rails/rails/tree/master/railties/lib/rails/generators/erb/scaffold/templates

to alter the generators(for scaffolds, resources, etc) alter the config/application.rb application

all of these changes will not be retroactive, would only be for anything you post changes

rails g scaffold Category title:string desription:text

there are guides on google to show you how to create your own generators



4.45 building a seeds flie
rails c
Blog.create!(title: 'asdf', body: ' afsasf')

can write ruby code in seeds.rb file, unsure as to when this will run

placeholder.com is a great place for image files

rails db:setup 
#going to do everything on scratch, never run on production and only locally, nuclear option

git push origin portfolio-feature #?????

4.46 implementing a index action from scratch
#work is being done in portfolios controller
must create an index.html.erb file in the views section, reference documentation there for what must be inside



4.47 the New and create function
rake routes
rake routes | grep portfolio

altering the portfolio controller file
create a new file in views/portfolio (our resources function we are currently building out)
you need a veiws file for every page that you will have
copied from _form.html.erb under the blogs section that was built by the scaffold system and removed the error section, left the do end structure behind
changed the blog to @portfolio, still unsure of where the @portfolio variable was created
Did not create error that he was stating, but we need to be able to provide the controller with the correct data
He stated to correct this you need to add to the "new" function the @portfolio_item = Portfolio.new(not portfolio_items)
New only renders/instanciates the item, does not create it

Error no show function
fix: under portfolio controllers the redirect to portion. Change @portfolio item to portfolio paths. You can find this underneath reake route prefixes? portfolios_path to Portfolio.new

5.48 implement editing database records
copied all from new.html.erb from the views/portfolio folder and changed
def edit
    @portfolio_item = Portfolio.find(params[:id])
end

Portfolio.find(params[:id])

Need to implement an update method within the controller

5.49 creating a link
in veiws/portfolio

5.50 building a show link
edit index files and add show.html.erb

5.51 implementing the delete action
updated main images via code below
 => "http://via.placeholder.com/0x400" 
2.4.1 :023 > Portfolio.length.times do |i|
2.4.1 :024 >     if !Portfolio.find(i + 1).nil?
2.4.1 :025?>     Portfolio.find(i+1).update_attributes(:main_image => 'http://via.placeholder.com/600x400')
2.4.1 :026?>     end
2.4.1 :027?>   end

### from later tutorial .find_each method would also work


.destroy or .delete method
delete does not care about validations or callbacks?
destroy does not delete if there are items dependent on the call, normally the better option

5.52 custom routes
#must restart rails server everytime you make a change to the routes file

5.53 custom routes for resources
updated routes file and veiw file so that the show action path will say portfolio/:id instead of portfolios/:id

5.54-55 implementing permalinks
friendly id genfile
modified its migration file following github documentation
friendly id has an initializer file with reserved words, not exactly sure how they work
rails:db migrate updates schema file
deviated from devcamp and followed documentation, edited users controller
*return to this as I don't think it generated the files
* we are not using the user model as stated in the doc, we will be appying this to our blog.rb???
***   extend FriendlyId
***   friendly_id :title, use: :slugged

Editing with migration generator
rails g migration add_slug_to_blogs slug:string:uniq


rails c
Blog.create!(title: "My great title", body:"sadkfjal")


added friendly id functionality from docs to blogs controller instead of users controller
def set_blog
@blog = Blog.find(params[:id]) >> @blog = Blog.friendly.find(params[:id])

rails c
Blog.find_each(&:save)
**&:   means proc as a method argument


5.56 Enums in Rails to manage data stages
adding a status
rails g migration add_post_status_to_blogs status:integer
change to generated migration file default: 0
put an enum in blog.rb
enum status: {draft: 0, published: 1}

*problem arose from not saving migration default vaule before applying, created new migration file and added remove_column :blogs, :status

Blog.last.published!
Blog.last.published?
Blog.published.count


5.57-58 implement in custom action(toggle)
index.html.erb
<th colspan="3"></th> to <th colspan="4"></th>
added link_to blog.status, toggle_status_blog_path(blog)        (draft?) grabbed after updating resources
added <th>Status</th>

open routes.rb
under resources 
resources :blog do
   member do
      get :toggle_status >>>changed from a post request to a get
   end
end

rake routes
will find new route

edit blog controller for toggle status action
needed to pass in blog/:id to the veiws file

added 
def toggle_status to blogs_controller.rb
byebug## stops your system and asks question
redirect_to blogs_url

when hitting draft link, byebug opens in server, same as console
type in params when requested
blog = Blog.friendly.find(params[:id])
blog = blog.published!
exit

implemented ternary operator and deviated from tutorial

added to toggle_status

5.59 updating project management
merging the branch
creating a new pull request

5.60-62 rails routing and data flow
creating a new app, routing app

rails new RoutingApp -T --database=postgresql
rails g scaffold Blog title:string body:text
rails g controller Pages  about contact
rails db:create
rails db:migrate

implementing a custom route for static pages about and contact
modified get 'pages/about' to
get 'about', to: 'pages#about'                   #### 'controller#path'

will change the uri pattern in rake routes

get 'leadgen/advertising/landingpage', to: 'pages#contact', as: 'lead' #can use lead_path as a linkto within the code

creating a new page
1. insert method/page name into controller (def home)
2. create a .html.erb file in the views (home.html.erb)
3. enter the path in routes (root to: 'pages#home') , willl deliver at localhost 3000

nested routes
rails g controller Dashboard main user blog
namespace
created a nested admin table 
create a controller folder named admin and drop the dashboard file into it
alter the class name Admin::DashboardController
create a veiws folder named admin and drop the dashboard file into it

example
resources :posts
# this will create routes for you in rake routes
# will create the same as resources :blogs, but no file will be available to you
#error need controller
create posts_controller.rb
class PostsController < AplicationController
  def index
  end
end

create veiws folder with the matching definition names ie def index in the controller would be have a file under views/posts/index.html.rb


Globbing
grouping items and routes together
under routes
get 'posts/*missing', to: 'posts#missing'
this will create a method called missing in the posts controller

Advanced routing query
get 'query/:thing', to: 'pages#something'
# anything with a colon in the routing will be an object or variable
#query is just a name we gave the route

have to pass in @thing = params[:thing] in the controller method you point the query to

passed the <h1><%= @thing  %></h1> to the veiws file and it is now showing the :thing extension

6.64 Data Validations
after the pull request on github, we must update local stuff with git pull
create a new repository
git checkout -b data-feature

created example of empty blog post in rails c
called upcase method on the views file and it threw an error
go to models to implement validation

validates_presence_of :title, :body
##will not let a blog post item to be created without a title and a body

updated all the models files

6.65 data relationships in rails
git symbolic-ref --short HEAD
git checkout data-feature
rails g model Topic title:string
rails db:migrate
validates_presence_of :title within the topic.rb model


Example
Blogs:
title:Baseball wolrd series, topic_id: 1
Superbowl, topic_id: 2
Spring training, topic_id: 1

Topics:
1 baseball
2 football

######################################################

rails g migration add_topic_referenece_to_blogs topic:references
note in db migration file    foreign_key: true ===== not just a regiulatr integer value but it is referencing  another table

addition to topic.rb 
has_many :blogs

addition to blogs.rb
belongs_to :topic


Topic.create!(title: "Ruby Programing")
Topic.create!(title: "Software Engineering")

Blog.create!(title: "Some cool ruby stuff", body: 'sadfgsadfsdf', topic_id: Topic.first.id)
t = Topic.first

t.blogs ###Active record association collection proxy
Blog.last.topic


6.66 custom scopes
updating seeds file
3.times do |topic|
    Topic.create!(
        title: "Topic #{topic}"
        )
end

puts "3 Topics created"

under body, lorem ipsum and after body created new object, topic_id: Topic.last.id

rails db:setup
Portfolio.first.subtitle
Portfolio.where(subtitle: "Ruby on Rails")

The lines at the beginning of a rails c query is sql  eg. SELECT  "portfolios".* FROM "portfolios" ORDER BY "portfolios"."id" DESC LIMIT $1

example shown in the portfolio controller where he used the .where method to fitler index items



****
under portfolio model
def self.angular
    where(subtitle: 'Angular')
  end

example shown for index file with Portfolio.angular

***
scope keyword, uses a lambda
scope :ruby_on_rails_portfolio_items, -> { where(subtitle: 'Ruby on Rails')}

example shown for index file with Portfolio.ruby_on_rails_portfolio_items

added new angular definition in controller
created a veiws file for angular
--altered to show @angular portfolio items
implemented a route to the page
get 'angular-items', to: portfolio_angular
will now show at /angular-items


6.67 set default values in rails 5
in portfolio.rb
  after_initialize :set_defaults

  def set_defaults
    self.main_image ||= "http://via.placeholder.com/600x400"
    self.thumb_image ||= "http://via.placeholder.com/350x200"
  end


used ||= because a regular = would over ride
means if self.object == nil

6.68 integrating concerns

Whenever you have a functionality but doesn't belong in a model file or should be shared across a couple of different model files

Can be abused

Should deal with data

#######################
rails g migration add_badge_to_skills badge:text
rails db:migrate

updated the skill model file to have a default badge

replacing the http://via.placeholder.com/250x250 with a concern
created a file in concerns placeholder.rb
added the module we created in placeholder.rb to the model file
##include Placeholder

#deviated from his def did not use key value syntax to see if it works
self.badge ||= Placeholder.image_generator(250, 250)
nope use 
self.badge ||= Placeholder.image_generator(height: 250, width: 250)
why must I use the the Hash syntax as an input? maybe you don't have to, but is as better practice because you cannot mess up the parameters that were put in


Used a module instead of a class?
--concerns are considered helper modules and it is Ruby best practice eg class would wourk but it is like UpperSnake case for classes


What does the extend function do?
ActiveSupport::Concern? meaning with Syntax




6.69 additionalparent/child relationships

rails g model Technology name:string portfolio:references

Why in the schema file does the t.bigint "portfolio_id" show up
--because the datatype is references ???
changed the bigint to integer


adds belongs_to :portfolio  to technology.rb when created
see 6.65 for more info
Still need to update the portfolio.rb file with has_many

Technology.create!(name: "Rails", portfolio_id: Portfolio.last.id)

added to seeds file:
3.times do |tech|
    Technology.create!(
        name: "Technology #{tech}"
        portfolio_id: Portfolio.last.id)
end

I kept this syntax bc it is more clear but alternatively

3.times do |tech|
    Portfolio.last.technologies.create!(
        name: "Technology #{tech}")
end

6.70-71 configuring nested attributes in the model
in poortfolio.rb
accepts_nested_attributes_for :technologies, reject_if: lambda {|attrs| attrs['name'].blank?}
create a single portfolio item and use multiple technologies


in rails console for testing
Portfolio.create!(title: "Web app", subtitle: "stuff", body: "body body body", technologies_attributes: [{name: "Ruby"},{name: "Rails"},{name: "Angular"},{name: "Ionic"}])

the last part must be an array of hashes or set of key value pairs

Within the portfolios controller def new
    3.times {@portfolio_item.technologies.build}
### note when using curly braces you do not need the do
###instantiate 3 technologies

under def create
add the technologies_attributes: [:name] to the required params

under new.html.erb
take the block variable form
ul is unordered list
li is list item
text feild is smaller than text area

  <ul>
    <%= form.fields_for :technologies do |technologiy_form| %>
      <li>
        <%= technologiy_form.label :name %>
        <%= technology_form.text_field :name %>
      </li>
    <% end %>
  </ul>


added to show page
<h2>Technologies Used:</h2>
<% @portfolio_item.technologies.each do |t| %>
<p><%= t.name%><p>
<% end %>

6.72 sql active receord deep dive
Class.find_by_sql(Select books.* From books)
Book.where(title: "The Force")
### brings an array of books
Book.find_by_title("The Force").author
##will bring a single item back


has_many :genes, through: :books
Genre.pluck(:name)
Book.includes(:author, :genre)
--much faster

7.76 devise
placing instructions in the gem file will install all gems with bundle install

7.77 implement registrations and logins
rails generate devise:install

changing the mailer_sender

1. Ensure you have defined default url options in your environments files.in config/environments/development.rb
config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }


In production, :host should be set to the actual host of your application.


Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>




  4. You can copy Devise views (for customization) to your app by running:

       rails g devise:views


rails generate devise MODEL
###do not use MODEL
eg rails generate devise User

New route method devise_for :users

new model file user.rb
:database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable

optionable :confirmable, :lockable, :timeoutable and :omniauthable
-comfirmation link -lock a user out -timeout -3rd party logins eg facebook

Custom feild in migration file

  t.string :name


http://localhost:3000/users/sign_up

7.78 custom routes for authentication pages
devise_for :users, path: '', path_names: { sign_in: 'login', sign_out: 'logout', sign_up: 'register'}

7.79 logout
in application.html.erb ### why application?
    <% link_to "Logout", path destroy_user_session_path, method: :delete %>

7.80 Devise custom attributes
Devise veiws
new.html.erb
edit.html.erb
added f.label :name subsection to both files
removed autofocus- where cursor automatically goes to
email feild will give a validation for an appropriate email
name must become a permitted parameter
devise/user controller was not created

application controller
Top class for all controllers
Placing devise whitelist here

added
  before_action :configure_permitted_parameters, if: :devise_controller?
#filter is depricated changed to action
# if statement needs :, figured out due to prior before action using : on only:

#:configure_permitted_parameters not special, could be anything

  def configure_permitted_parameters
    devise_parameter_sanitizer.permit(:sign_up, keys: [:name])
    devise_parameter_sanitizer.permit(:account_update, keys: [:name])
  end

7.81 Controller concerns in rails 5
single responsiblity rule
-class should have 1 resposibility

moving whitelist to a concern
created concern devise_white_list.rb
module DeviseWhitelist
#naming convension important when creating a module, must be the same as the file name and be UpperCammelCase.----only important in Rails parsing engine for easy module pass around

added extend ActiveSupport::Concern
put before action into included do
??????


7.82 virtual attributes
in the user model
new method
.update!(name: "cher")
current_user object available from devise

  validates_presence_of :name

  def first_name
    self.name.split.first
  end

  def last_name
    self.name.split.last
  end

in homepage

<h1>Hello <%= current_user.first_name if current_user %></h1>

7.83 Bcrypt
bcrypt and pry gems
to open type pry in the terminal
 require 'bcrypt'
ssn = BCrypt::Password.create("5555555")
[4] pry(main)> ssn
=> "$2a$10$VpCQ0KHJdrE7nAOUNX6Zr.DNLd4jjXpvPTQUAY7UkZSjHTFQ..n8C"
[5] pry(main)> ssn == "5555555"
=> true


secondary for faster encryption
ssn = BCrypt::Password.create("5555555", cost: 4)
BCrypt::Engine.generate_salt
"$2a$10$sCWSKUhtCWPSFq4d/RBuCu"
this is the staring point for our encryption

8.86 Using Rails Sessions to Share Data Between Pages
Portfolio controller inhereits from Application Controller
query string
?q=twitter
?asdfasdf=twitter
def set source created in Applications controller
session inspect on show.html.erb

Application layout file
application.html.erb
great for cart items since it is constant while browsing
-- although impermenOance after leaving site?
-- attached to users account?
-- cookies?
-- THIS IS NOT SECURE DO NOT PUT ANYTHING HERE THAT IS WORTH STEALING --

8.87 moved to individual concern
8.88 Working with strong parameters
white listing is recomended

under config/application.rb

config.action_controller.permit_all_parameter = true

8.89 null object pattern deep dive
if current_user is insecure
impleneted concern for current user for guests

9.92 master layouts file
application.html.erb
head tag changes the tab name
yield is where all the other sites load into

9.94 secondary layout files
stylesheet link tags
removed all data from application.css
require tree means requires all files, that is why it is removed

within the blogscontroller
 layout "blog"

assets file change

9.95 partials 9.96 send data to partials
_nav.html.erb

<%= render "shared/nav", location: 'top' %>


<div class="<%= loaction%>">
this will set a css class


under portfolios.css
.top a { 
color: red;
}

the a means it is a link, .top is just a class

9.97guide to view helpers

application helper
  def sample_helper
    "<p> My helper </p>".html_safe
  end
ome
home.html.erb
<hr> horizontal rule

<%= sample_helper %>

renders my helper on homepage
html_safe removes the <p> tags

purpose of view helper
whenever you need conditional logic inside of views

9.98 content helper tag methods
home.html.erb
<%= content_tag :p, class: "my-special-class" do %>
  Hi this is insitde a paragraph tag
<%end %>

dynamic html

  def sample_helper
    content_tag(:div, "My content", class: "my-class")
  end

9.99 rendering collections via partials
removed from index and placed most into partial

    <% @blogs.each do |blog| %>
      <tr>
        <td><%= blog.title %></td>
        <td><%= blog.body %></td>
        <td><%= link_to blog.status, toggle_status_blog_path(blog) %></td>
        <td><%= link_to 'Show', blog %></td>
        <td><%= link_to 'Edit', edit_blog_path(blog) %></td>
        <td><%= link_to 'Destroy', blog, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>

replaced w render @blogs

looks for a singular partial

same w portfolio
although looks for model/controller item
this is manual collections
actionview::missingtemplate

<%= render partial: 'portfolio_item', collection: @portfolio_items %>



















